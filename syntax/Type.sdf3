module Type

imports

Lexical

context-free syntax

Type = [([Type])] {bracket}

Type.TVar    = ID
Type.TADT    = [[UPPERID] [TypeList]] {layout("1.first.col <= 2.first.col")}
Type.TFun    = [[Type] -> [Type]] {right}
// prefer the bracket pattern
Type.TUnit   = [()]
Type.TTuple  = [([Type], [{Type ", "}+])]
Type.TRec    = [{[{TRecBind ", "}*]}]
Type.TRecExt = [{ [ID] | [{TRecBind ", "}*]}]

TRecBind.TRecBind = [[ID] : [Type]]

TypeList.TNil = []
TypeList.TCons = [[Type] [TypeList]] {layout("1.first.col <= 2.first.col")}


context-free priorities

TypeList.TCons >
Type.TFun
