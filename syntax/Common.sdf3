module Common

lexical syntax

	ID             = [a-z] [a-zA-Z0-9\_]*
	UPPERID        = [A-Z] [a-zA-Z0-9\_]* 
	INT            = "-"? [0-9]+ 
	FLOAT          = [0-9]* "." [0-9]+
	STRING         = "\"" StringChar* "\""
	STRING         = "\"\"\"" (~[\"] | HeredocDQuote)* "\"\"\"" 
	StringChar     = ~[\"\n] 
	StringChar     = "\\\"" 
	StringChar     = BackSlashChar
	CHAR           = "'" CharChar "'"
	HeredocDQuote  = [\"]
	BackSlashChar  = "\\" 
	LAYOUT         = [\ \t\n\r] 
	CommentChar    = [\{]
	LAYOUT         = BlockComment 
	BlockComment   = "{-" InsideComment* "-}" 
	InsideComment  = ~[\{] 
	InsideComment  = CommentChar
	InsideComment  = BlockComment
	LAYOUT         = "--" ~[\n\r]* NewLineEOF 
	NewLineEOF     = [\n\r] 
	NewLineEOF     = EOF 
	EOF            =  
	
	

lexical restrictions

	// Ensure greedy matching for lexicals
	
	CommentChar   -/- [\-]
	INT           -/- [0-9]
  FLOAT         -/- [0-9]
	ID            -/- [a-zA-Z0-9\_]
  UPPERID       -/- [a-zA-Z0-9\_]
	
	// EOF may not be followed by any char
	
	EOF           -/- ~[]
	
	// Backslash chars in strings may not be followed by " 
	
	BackSlashChar -/- [\"]
	
	// Heredoc double quote should not be followed by two more
	
	HeredocDQuote   -/- [\"].[\"]

context-free restrictions

	// Ensure greedy matching for comments
	
	LAYOUT? -/- [\ \t\n\r]
	LAYOUT? -/- [\/].[\/]
	LAYOUT? -/- [\/].[\*]

